<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Eberhardt blog</title><link>https://aaronerhardt.github.io/blog/</link><description>Recent content on Eberhardt blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://aaronerhardt.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Announcing tuxedo-rs</title><link>https://aaronerhardt.github.io/blog/posts/announcing_tuxedo_rs/</link><pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/announcing_tuxedo_rs/</guid><description>I&amp;rsquo;m excited to announce tuxedo-rs, a collection of Rust crates for interacting with hardware from TUXEDO Computers.
Some background TUXEDO Computers is a PC and notebook vendor from Germany that sells hardware optimized for Linux.
TUXEDO Computers are customizable Linux notebooks and Desktop PCs optimized in the first place to run with Ubuntu-based Linux operating systems. Literally Linux hardware in a tailor-made suit.
I think that&amp;rsquo;s pretty neat! For me, having a small local hardware vendor that focuses on Linux is basically all I could wish for.</description></item><item><title>Does Rust need proc-macros 2.0?</title><link>https://aaronerhardt.github.io/blog/posts/proc_macro_v2/</link><pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/proc_macro_v2/</guid><description>Without any doubt, macros are an important feature of the Rust programming language. Macros like println!, lazy_static!, various derive-macros and many others have saved countless hours of writing tedious boilerplate code.
However, not everything is perfect yet. You might have heard about the declarative macros 2.0 effort to fix some longstanding issues with macro_rules!. The new macro syntax is still WIP, but I hope it will be stabilized soon.
However, that just improves declarative macros, but Rust also has proc-macros (procedural macros).</description></item><item><title>Plotters is back!</title><link>https://aaronerhardt.github.io/blog/posts/plotters_is_back/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/plotters_is_back/</guid><description>This is a short update on my recent post regarding the plotters crate. The maintainer of plotters did respond and fortunately all plans for forking the project are dropped.
Now all repositories live in the plotters-rs organization and can be maintained by members of the community. Also, we&amp;rsquo;re looking for people who want to join the maintenance team (#345).
What can we learn from this? Open source projects often start as personal projects.</description></item><item><title>Planning the future of plotters</title><link>https://aaronerhardt.github.io/blog/posts/plotters_future/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/plotters_future/</guid><description>With over 1900 stars on GitHub and over 600.000 downloads per month, plotters is a very prominent and widely used Rust crate. By a huge margin it is the most used plotting library for Rust and covers a lot of different use-cases and back-ends.
Yet, since roughly June 2021, almost 10 months ago, there hasn&amp;rsquo;t been any considerable activity on the main branch of the repository. At the same time, the community has been very active with 22 pull requests submitted since then, but none of them was reviewed or merged.</description></item><item><title>A new Relm 4 you: announcing Relm4 v0.4!</title><link>https://aaronerhardt.github.io/blog/posts/announcing_relm4_v0.4/</link><pubDate>Mon, 17 Jan 2022 15:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/announcing_relm4_v0.4/</guid><description>A new realm is here for you to explore! I&amp;rsquo;m happy to announce Relm4 v0.4, our biggest release so far!
About Relm4 Relm4 is an idiomatic GUI library inspired by Elm and based on gtk4-rs.
We believe that GUI development should be easy, productive and delightful.
The gtk4-rs crate already provides everything you need to write modern, beautiful and cross-platform applications. Built on top of this foundation, Relm4 makes developing more idiomatic, simpler and faster and enables you to become productive in just a few hours.</description></item><item><title>Speedrunning GUI development in Rust</title><link>https://aaronerhardt.github.io/blog/posts/gui_speedrun/</link><pubDate>Sun, 05 Dec 2021 15:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/gui_speedrun/</guid><description>On the evening of the 30th November, I had a few hours to spare and came up with the idea to write a small advent calendar example application for Relm4. There wasn&amp;rsquo;t much time left before the first door of the calendar could be opened and I wanted to stay on schedule, so I had to be very quick with the implementation. That gave me the idea to use this opportunity for a GUI implementation speedrun using Rust.</description></item><item><title>Announcing Relm4 v0.2</title><link>https://aaronerhardt.github.io/blog/posts/announcing_relm4_v0.2/</link><pubDate>Sat, 09 Oct 2021 15:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/announcing_relm4_v0.2/</guid><description>Roughly one month after the first stable release a I&amp;rsquo;m happy to announce the second stable release of Relm4! ðŸš€ðŸš€ðŸš€
About Relm4 We believe that GUI development should be easy, productive and delightful.
The gtk4-rs crate already provides everything you need to write modern, beautiful and cross-platform applications. Built on top of this foundation, Relm4 makes developing more idiomatic, simpler and faster and enables you to become productive in just a few hours.</description></item><item><title>Announcing Relm4 v0.1</title><link>https://aaronerhardt.github.io/blog/posts/announcing_relm4/</link><pubDate>Mon, 06 Sep 2021 15:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/announcing_relm4/</guid><description>Roughly one month after the first beta release and countless hours of work I&amp;rsquo;m happy to announce the first stable release of Relm4! ðŸŽ‰ðŸŽ‰ðŸŽ‰
About Relm4 Relm4 is an idiomatic GUI library inspired by Elm and based on gtk4-rs. It is a new version of relm that&amp;rsquo;s built from scratch and is compatible with GTK4 and libadwaita. The main goals are productivity, flexibility, simplicity and maintainability.
Over the last beta releases, the development slowly calmed down up to a point where I&amp;rsquo;m comfortable releasing the first stable version.</description></item><item><title>Relm4 beta released ðŸŽ‰</title><link>https://aaronerhardt.github.io/blog/posts/relm_beta/</link><pubDate>Wed, 11 Aug 2021 15:00:00 +0000</pubDate><guid>https://aaronerhardt.github.io/blog/posts/relm_beta/</guid><description>What&amp;rsquo;s relm? Relm is described on its repository as an &amp;ldquo;idiomatic, GTK+-based, GUI library, inspired by Elm, written in Rust&amp;rdquo; and has more than 2000 GitHub stars and over 36.000 downloads on crates.io.
When I first started with GUI development in Rust and experimented with gtk-rs I had a rough time because I was completely new to GUI development and GTK. Relm on the other side provided me the examples and structure I needed to get productive in just a couple of hours.</description></item></channel></rss>